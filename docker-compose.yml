services:
  wordpress:
    image: wordpress:6.4-php8.2-apache
    container_name: wp_site
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress123
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: 1
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('SCRIPT_DEBUG', true);
        define('WP_ENVIRONMENT_TYPE', 'local');
    volumes:
      - ./wp-content:/var/www/html/wp-content
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./wp-config-extra.php:/var/www/html/wp-config-extra.php
    depends_on:
      - db
    networks:
      - wordpress-network

  db:
    image: mysql:8.0
    container_name: wp_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress123
      MYSQL_ROOT_PASSWORD: rootpassword123
      MYSQL_ALLOW_EMPTY_PASSWORD: 'false'
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - wordpress-network
    command: '--default-authentication-plugin=mysql_native_password'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: wp_phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: rootpassword123
      MYSQL_ROOT_PASSWORD: rootpassword123
    depends_on:
      - db
    networks:
      - wordpress-network

  vite:
    build:
      context: .
      dockerfile: Dockerfile.vite
    container_name: wp_vite
    ports:
      - "3000:3000"
    volumes:
      - ./wp-content/themes/hello-child:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - wordpress-network

volumes:
  db_data:

networks:
  wordpress-network:
    driver: bridge
